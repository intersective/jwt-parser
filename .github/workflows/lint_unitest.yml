# GitHub Actions WorkFlow

name: SonarCloud CI Unit Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches:
      - trunk
      - develop
  push:
    branches:
      - develop
      - feature/*
jobs:
  build:
    name: SonarCloud GithubAction
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        
      - name: Install dependencies
        run:  npm ci

      # Run tests
      - name: Run unit tests
        run:  npm test

      # Run Sonarcloudscan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
     
      # Run Slack Notification
      - name: Slack Notification
        if: always() # Pick up events even if the job fails or is canceled.
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          author_name: GitHubAction CI for lint/unit test
          mention: 'here'
          if_mention: failure,cancelled
          fields: repo,commit,eventName,ref,workflow,message
          custom_payload: |
            {
            username: 'GitHub Action CI WorkFlow',
            icon_emoji: ':github:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : ${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text:
             `${process.env.AS_REPO}\n
              ${process.env.AS_COMMIT}\n 
              ${process.env.AS_EVENT_NAME}\n
              @${process.env.AS_REF}\n
              @${process.env.AS_WORKFLOW}\n
              ${process.env.AS_MESSAGE}`,
            }]
            }
